name: "build-n-test"
trigger:
  branches:
    include:
      - "master"

variables:
  produceArtifacts: false 

jobs:
  - job: "image"
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    timeoutInMinutes: 0
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - checkout: self
        clean: true
        lfs: true
        submodules: recursive
        persistCredentials: true
      - task: Docker@2
        displayName: ubuntu build
        inputs:
          command: build
          Dockerfile: docker/ubuntu
          buildContext: "."
          containerRegistry: airmapreg.acr
          repository: platform-sdk.ubuntu
          tags: |
            $(Build.SourceVersion)
          arguments: --build-arg produceArtifacts=$(produceArtifacts)
      - task: Docker@2
        displayName: ubuntu push
        inputs:
          command: push
          Dockerfile: docker/ubuntu
          buildContext: "."
          containerRegistry: airmapreg.acr
          repository: platform-sdk.ubuntu
          tags: |
            $(Build.SourceVersion)
      - task: Docker@2
        displayName: centos
        inputs:
          command: buildAndPush
          Dockerfile: docker/centos
          buildContext: "."
          containerRegistry: airmapreg.acr
          repository: platform-sdk.centos
          tags: |
            $(Build.SourceVersion)
  - job: "pr"
    condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')
    timeoutInMinutes: 0
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - checkout: self
        clean: true
        lfs: true
        submodules: recursive
        persistCredentials: true
      - task: Docker@2
        displayName: ubuntu
        inputs:
          command: build
          Dockerfile: docker/ubuntu
          buildContext: "."
          arguments: --build-arg produceArtifacts=$(produceArtifacts)
      - task: Docker@2
        displayName: centos
        inputs:
          command: build
          Dockerfile: docker/centos
          buildContext: "."
      - task: Docker@2
        displayName: android
        inputs:
          command: build
          Dockerfile: docker/android
          buildContext: "."
