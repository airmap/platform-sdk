cmake_minimum_required(VERSION 3.5)

project(airmap C CXX)

set(AIRMAP_EXTERNAL_DEPENDENCIES_OUTPUT_PATH "${CMAKE_BINARY_DIR}/external")

set(AIRMAP_CARES_OUTPUT_PATH "${AIRMAP_EXTERNAL_DEPENDENCIES_OUTPUT_PATH}/cares")
set(AIRMAP_GRPC_OUTPUT_PATH "${AIRMAP_EXTERNAL_DEPENDENCIES_OUTPUT_PATH}/grpc")
set(AIRMAP_PROTOBUF_OUTPUT_PATH "${AIRMAP_EXTERNAL_DEPENDENCIES_OUTPUT_PATH}/protobuf")

set(ENV{AIRMAP_CARES_OUTPUT_PATH}    ${AIRMAP_CARES_OUTPUT_PATH})
set(ENV{AIRMAP_GRPC_OUTPUT_PATH}     ${AIRMAP_GRPC_OUTPUT_PATH})
set(ENV{AIRMAP_PROTOBUF_OUTPUT_PATH} ${AIRMAP_PROTOBUF_OUTPUT_PATH})

set(ENV{CMAKE_PREFIX_PATH} "${AIRMAP_CARES_OUTPUT_PATH}:${AIRMAP_GRPC_OUTPUT_PATH}:${AIRMAP_PROTOBUF_OUTPUT_PATH}")

list(
  APPEND CMAKE_PREFIX_PATH

  ${AIRMAP_GRPC_OUTPUT_PATH} 
  ${AIRMAP_CARES_OUTPUT_PATH}Â 
  ${AIRMAP_PROTOBUF_OUTPUT_PATH}
)

include(external.cmake)

include(GNUInstallDirs)

find_file(
  AIRMAP_PROTOBUF_CMAKE_CONFIG protobuf-config.cmake
  PATHS ${AIRMAP_PROTOBUF_OUTPUT_PATH}/lib/cmake/protobuf ${AIRMAP_PROTOBUF_OUTPUT_PATH}/${CMAKE_INSTALL_LIBDIR}/cmake/protobuf
  NO_DEFAULT_PATH)

if (NOT AIRMAP_PROTOBUF_CMAKE_CONFIG)
  message(FATAL_ERROR "Failed to find protobuf cmake config file")
endif()

include(${AIRMAP_PROTOBUF_CMAKE_CONFIG})

find_file(
  AIRMAP_GRPC_CMAKE_CONFIG gRPCConfig.cmake
  PATHS ${AIRMAP_GRPC_OUTPUT_PATH}/lib/cmake/grpc ${AIRMAP_GRPC_OUTPUT_PATH}/${CMAKE_INSTALL_LIBDIR}/cmake/grpc
  NO_DEFAULT_PATH)

if (NOT AIRMAP_GRPC_CMAKE_CONFIG)
  message(FATAL_ERROR "Failed to find grpc cmake config file")
endif()

include(${AIRMAP_GRPC_CMAKE_CONFIG})

include(airmapd.cmake)
